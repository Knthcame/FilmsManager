<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbortPickImageCancelText" xml:space="preserve">
    <value>No, stay</value>
    <comment>Text for the cancel button in the dialog message when pressing the back button in PIckImagePage</comment>
  </data>
  <data name="AbortPickImageMessage" xml:space="preserve">
    <value>Are you sure you want to cancel selecting a picture?</value>
    <comment>Message for the dialog message when pressing the back button in PIckImagePage</comment>
  </data>
  <data name="AbortPickImageOkText" xml:space="preserve">
    <value>Yes, abort</value>
    <comment>Text for the ok button in the dialog message when pressing the back button in PIckImagePage</comment>
  </data>
  <data name="AbortPickImageTitle" xml:space="preserve">
    <value>Abort image selection?</value>
    <comment>Title for the dialog message when pressing the back button in PIckImagePage</comment>
  </data>
  <data name="ActionGenre" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="AddFilmAbortCancelButton" xml:space="preserve">
    <value>No, stay</value>
  </data>
  <data name="AddFilmAbortMessage" xml:space="preserve">
    <value>Are you sure you want to cancel adding a movie?</value>
  </data>
  <data name="AddFilmAbortOkButton" xml:space="preserve">
    <value>Yes, abort</value>
  </data>
  <data name="AddFilmAbortTitle" xml:space="preserve">
    <value>Abort addition?</value>
  </data>
  <data name="AddFilmDefaultImageCancelButton" xml:space="preserve">
    <value>No, i want to choose one</value>
  </data>
  <data name="AddFilmDefaultImageMessage" xml:space="preserve">
    <value>Are you sure you want to go with the default image?</value>
  </data>
  <data name="AddFilmDefaultImageOkButton" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="AddFilmDefaultImageTitle" xml:space="preserve">
    <value>Default image</value>
  </data>
  <data name="AddFilmMissingGenre" xml:space="preserve">
    <value>Missing genre:</value>
  </data>
  <data name="AddFilmMissingTitle" xml:space="preserve">
    <value>Missing title:</value>
  </data>
  <data name="AddFilmPageEntryPlaceholder" xml:space="preserve">
    <value>Insert Movie Title</value>
  </data>
  <data name="AddFilmPagePickerPlaceholder" xml:space="preserve">
    <value>Movie Genre</value>
  </data>
  <data name="AddFilmPageTitle" xml:space="preserve">
    <value>Add a film</value>
  </data>
  <data name="AllGenres" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="DramaGenre" xml:space="preserve">
    <value>Drama</value>
  </data>
  <data name="FantasyGenre" xml:space="preserve">
    <value>Fantasy</value>
  </data>
  <data name="FilmDetailsPageTitle" xml:space="preserve">
    <value>Film details</value>
  </data>
  <data name="Flag" xml:space="preserve">
    <value>uk.png</value>
  </data>
  <data name="GenreColumn" xml:space="preserve">
    <value>Genre</value>
    <comment>Header for the genre column of MovieList</comment>
  </data>
  <data name="GoBackButtonText" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="HomePageAddButton" xml:space="preserve">
    <value>Add film</value>
  </data>
  <data name="HomePageTitle" xml:space="preserve">
    <value>Films Manager</value>
  </data>
  <data name="HumourGenre" xml:space="preserve">
    <value>Humour</value>
  </data>
  <data name="ImageColumn" xml:space="preserve">
    <value>Image</value>
    <comment>Header for the image column of MovieList</comment>
  </data>
  <data name="LanguageAbreviation" xml:space="preserve">
    <value>EN</value>
  </data>
  <data name="LanguageSelectionPageTitle" xml:space="preserve">
    <value>Language selection</value>
  </data>
  <data name="MissingEntriesCancelButton" xml:space="preserve">
    <value>No, stay</value>
  </data>
  <data name="MissingEntriesMessage" xml:space="preserve">
    <value>Not all values have been inerted. Abort adding film?</value>
  </data>
  <data name="MissingEntriesOkButton" xml:space="preserve">
    <value>Yes, abort</value>
  </data>
  <data name="MissingEntriesTitle" xml:space="preserve">
    <value>Missing entries</value>
  </data>
  <data name="OpenGalleryButton" xml:space="preserve">
    <value>Choose an image</value>
    <comment>Text for the button that opens the PickImagePage</comment>
  </data>
  <data name="OpenMobileGalleryText" xml:space="preserve">
    <value>Choose from gallery</value>
  </data>
  <data name="PickImagePageTitle" xml:space="preserve">
    <value>Pick movie image</value>
  </data>
  <data name="PreloadedImagesText" xml:space="preserve">
    <value>Preloaded images</value>
  </data>
  <data name="ScienceFictionGenre" xml:space="preserve">
    <value>ScienceFiction</value>
  </data>
  <data name="SearchFilmPagePickerPlaceholder" xml:space="preserve">
    <value>Select movie genre to filter by</value>
  </data>
  <data name="SearchFilmPageSearchBarPlaceholder" xml:space="preserve">
    <value>Insert movie title to search for</value>
  </data>
  <data name="SearchFilmPageTitle" xml:space="preserve">
    <value>Search film</value>
  </data>
  <data name="SearchTypeButtonText" xml:space="preserve">
    <value>Search by </value>
  </data>
  <data name="StorageAccesCancelButton" xml:space="preserve">
    <value>Deny</value>
  </data>
  <data name="StorageAccesMessage" xml:space="preserve">
    <value>The application needs permission to acces your gallery</value>
  </data>
  <data name="StorageAccesOkButton" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="StorageAccesTitle" xml:space="preserve">
    <value>Need acces to storage</value>
  </data>
  <data name="SuperHeroesGenre" xml:space="preserve">
    <value>Super heroes</value>
  </data>
  <data name="TerrorGenre" xml:space="preserve">
    <value>Terror</value>
  </data>
  <data name="TitleColumn" xml:space="preserve">
    <value>Title</value>
    <comment>Header for the title column of MovieList</comment>
  </data>
</root>